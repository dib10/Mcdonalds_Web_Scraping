import streamlit as st
import pandas as pd
import plotly.express as px

hr = st.markdown("""
<hr>
""", unsafe_allow_html=True)

# Remova a palavra 'kcal' da coluna 'Calorias' e converta para num√©rico
df = pd.read_csv('mcdonalds_nutricional.csv')  # Certifique-se de ajustar o nome do arquivo CSV
df['Calorias'] = pd.to_numeric(df['Calorias'].str.replace('kcal', ''), errors='coerce')

# Ordenando o DataFrame pela coluna 'Calorias' em ordem decrescente
df_sorted = df.sort_values('Calorias', ascending=False)

st.markdown("""
<p style='font-size: 20px;'>
Impulsionado por caf√© e c√≥digo. 
Se voc√™ gostou do meu trabalho, considere <a href='https://buymeacoffee.com/dib10'>comprar um caf√© para mim</a> ‚òï
</p>
<hr>
""", unsafe_allow_html=True)
# T√≠tulo principal
st.title('üçîüçü Card√°pio Nutricional do McDonalds')

# Exibir o DataFrame completo
st.write(df)
st.markdown("<hr>", unsafe_allow_html=True)

# Fun√ß√£o para exibir gr√°ficos e dados
def exibir_categoria_com_grafico(titulo, categoria, colunas_para_exibir):
    st.title(titulo)
    categoria_df = df_sorted[df_sorted['Categoria'] == categoria]
    # Selecione apenas as colunas que voc√™ deseja exibir
    categoria_df = categoria_df[colunas_para_exibir]
    # Exiba o DataFrame sem √≠ndices
    st.write(categoria_df.set_index('Produto'))
    fig = px.bar(categoria_df, x='Produto', y='Calorias', color='Calorias', color_continuous_scale=["#FFC72C", "#DA291C"])
    fig.update_layout(xaxis_tickangle=-45)
    st.plotly_chart(fig)
    st.markdown("<hr>", unsafe_allow_html=True)

# T√≠tulo principal
st.title('„ÄΩÔ∏èüçî Os 10 produtos mais cal√≥ricos do card√°pio do McDonalds')

# Filtrando os dados para exibir apenas as colunas necess√°rias
df_filtrado = df_sorted[['Categoria', 'Produto', 'Calorias']]

# Exibindo os 10 produtos mais cal√≥ricos
st.write(df_filtrado.head(10).set_index('Produto'))
# Gr√°fico dos 10 produtos mais cal√≥ricos
fig = px.bar(df_sorted.head(10), x='Produto', y='Calorias', color='Calorias', color_continuous_scale=["#FFC72C", "#DA291C"])
fig.update_layout(xaxis_tickangle=-45)
st.plotly_chart(fig)
st.markdown("<hr>", unsafe_allow_html=True)


# Exibindo categorias
exibir_categoria_com_grafico('üêÇ Sandu√≠ches de carne bovina mais cal√≥ricos', 'Sandu√≠ches de Carne Bovina', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üçî Brabos do M√©qui mais cal√≥ricos', 'Brabos do M√©qui', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üçî Fam√≠lia Tasty mais cal√≥rica', 'Fam√≠lia Tasty', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üêî Sandu√≠ches de frango mais cal√≥ricos', 'Sandu√≠ches de Frango', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üçü Acompanhamentos mais cal√≥ricos', 'Acompanhamentos', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üç® Sobremesas mais cal√≥ricas', 'Sobremesas', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('ü•§ Bebidas frias mais cal√≥ricas', 'Bebidas Frias', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('‚òïÔ∏è Bebidas quentes mais cal√≥ricas', 'Bebidas Quentes', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('üç≥ Caf√© da manh√£ mais cal√≥rico', 'Caf√© da Manh√£', ['Produto', 'Calorias'])
exibir_categoria_com_grafico('‚òïÔ∏è McCaf√© mais cal√≥rico', 'McCaf√©', ['Produto', 'Calorias'])

# Adicionando nota de rodap√©
st.markdown("""
Impulsionado por ‚òï e c√≥digo. Feito com carinho por Caio Dib
""")
